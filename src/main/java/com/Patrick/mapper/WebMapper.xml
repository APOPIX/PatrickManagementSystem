<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.Patrick.mapper.WebMapper">
    <!-- 下面的select标签中，"id"与"WebMapper.java"中的方法一一对应，"resultMap"与最后"resultMap"标签中的"id"呈多对一映射关系 -->
    <!--下面的SQL语句实现按照用户名和密码在Staff表中查询元组-->
    <select id="login" resultMap="StaffMap">
      select * from staff where staff_name = "${staff_name}" and staff_password = "${staff_password}"
    </select>

    <!--下面的SQL语句实现Staff表中插入元组-->
    <select id="register">
    INSERT INTO staff (`role`, `staff_password`, `staff_name`) VALUES (${role_register}, "${staff_password_register}", "${staff_name_register}")
    </select>

    <!--下面的SQL语句实现按照id顺序从staff表中检索所有内容-->
    <select id="selectAllStaffOrderById" resultMap="StaffMap">
    select * from staff order by id asc
    </select>



    <!-- 下面的SQL语句实现数据库信息向Staff类的传输（即数据库——>DAO层） -->
    <resultMap id="StaffMap" type="com.Patrick.dao.Staff">
        <!-- 下面"result"标签中，"column"与数据库表中的列名对应，"property"与DAO层定义的类中的属性对应（在这里指"Staff.java"），一般取同名 -->
        <id column="id" property="staff_id" jdbcType="INTEGER"/>
        <result column="role" property="role" jdbcType="INTEGER"/>
        <result column="staff_name" property="staff_name" jdbcType="VARCHAR"/>
        <result column="staff_password" property="staff_password" jdbcType="VARCHAR"/>
    </resultMap>
</mapper>